"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var loadScriptAsync =
/*#__PURE__*/
function () {
  function loadScriptAsync() {
    _classCallCheck(this, loadScriptAsync);
  }

  _createClass(loadScriptAsync, [{
    key: "ReplaceHtml",
    value: function ReplaceHtml(e, t) {
      try {
        var r = new DOMParser(),
            c = r.parseFromString(e, "text/html"),
            n = t.cloneNode(!1);
        t.parentNode.replaceChild(n, t), this.PlaceElems(c.head, n, !0), this.PlaceElems(c.body, n, !0);
      } catch (e) {
        return console.log(e), !1;
      }

      return !0;
    }
  }, {
    key: "CheckForScripts",
    value: function CheckForScripts(e) {
      return !!e.innerHTML.match(/<[s\u017F]cript(?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?>(?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?<\/[s\u017F]cript>/i);
    }
  }, {
    key: "PlaceElems",
    value: function PlaceElems(e, t) {
      var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
      var c = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
      if (r && !this.CheckForScripts(e)) return t.innerHTML += e.innerHTML, !0;
      var n = e.childNodes;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = n[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _e = _step.value;

          if ("SCRIPT" === _e.tagName) {
            var _r = document.createElement("script"),
                _c = _e.src;

            if (_c && "" !== _c) _r.src = _c;else {
              var _t = document.createTextNode(_e.innerHTML);

              _r.appendChild(_t);
            }
            t.appendChild(_r);
          } else try {
            if (void 0 !== _e.children) if (_e.children.length > 0) {
              var _r2 = _e.cloneNode(!1);

              t.appendChild(_r2), this.PlaceElems(_e, _r2, c, !1);
            } else t.appendChild(_e);
          } catch (e) {
            return console.log(e), !1;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return !0;
    }
  }]);

  return loadScriptAsync;
}();